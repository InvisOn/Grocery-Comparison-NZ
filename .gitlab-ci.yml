stages:
  - setup
  - frontend-test
  - backend-test
  - e2e
  - lint

# Step 1: Install dependencies
setup:
  stage: setup
  image: node:22.12.0
  script:
    - cd frontend && npm install && cd ../backend && npm install && cd ../webscraping && npm install && cd ..

# Step 2: Frontend Unit and Component Integration Tests with Jest
frontend-test:
  stage: test
  image: node:22.12.0
  script:
    - cd frontend && npm run test
  artifacts:
    paths:
      - frontend/
    when: always

# Step 3: Backend Unit and Component Integration Tests with Jest and Supertest
# backend-test:
#   stage: test
#   image: node:22.12.0
#   script:
#     - cd backend && npm run test
#   artifacts:
#     paths:
#       - coverage/backend/
#     when: always
#
# eslint:
#   stage: lint
#   image: node:22.12.0
#   before_script:
#     - npm install
#   script:
#     - npm run lint
#   only:
#     - merge_requests
#     - branches
#
# Step 4: Frontend End-to-End Tests with Maestro
# frontend-e2e-maestro:
#   stage: e2e
#   image: maestroqa/maestro-cli:latest
#   before_script:
#     - mkdir -p maestro-artifacts
#     - export ANDROID_HOME=/sdk/android
#   script:
#     - maestro test mobile/maestro/register_test.yaml --output maestro-artifacts
#   artifacts:
#     paths:
#       - maestro-artifacts/
#     when: always
#
# Step 5: Backend End-to-End Tests with Cypress
# backend-e2e-cypress:
#   stage: e2e
#   image: cypress/included:12.6.0
#   script:
#     - cypress run --config-file cypress.json
#   artifacts:
#     paths:
#       - cypress/results/
#     when: always
